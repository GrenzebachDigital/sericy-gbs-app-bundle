{{ if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.service_name }}-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/upstream-vhost: "$host:$server_port"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.ingress.proxy_read_timeout }}"
{{ if eq .Values.service_type "ui" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{ else if eq .Values.service_type "api" }}
    nginx.ingress.kubernetes.io/proxy-body-size:       {{ .Values.ingress.proxy_body_size }}
    nginx.ingress.kubernetes.io/proxy-buffer-size:     "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number:  "4"
{{ end }}
spec:
  tls:
  - hosts:
    - {{ .Values.global.public_domain }}
    secretName: sericyio-secret
  rules:
  - http:
      paths:
      - pathType: Prefix
        backend:
          service:
            name: {{ .Values.service_name }}-service
            port:
              number: 80
{{ if eq .Values.service_type "ui" }}
        path: /{{ .Values.service_name }}/?(.*)
{{ else }}
        path: /{{ .Values.service_name }}
{{ end }}
    host: {{ .Values.global.public_domain }}
{{ end }}
